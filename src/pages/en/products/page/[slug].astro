---
import Blogs from "@components/Blogs.astro";
import PageHeader from "@components/PageHeader.astro";
import Shape from "@components/Shape.astro";
import ProductsList from "@components/products/ProductsList.astro";
import config from "@config/config.json";
import Base from "@layouts/Base.astro";
import Pagination from "@layouts/components/Pagination.astro";
import { getSinglePage } from "@lib/contentParser.astro";
import { sortByDate } from "@lib/utils/sortFunctions";
import { getEntryBySlug } from "astro:content";

import productsJson from "@data/products.json";


export async function getStaticPaths() {
  const posts = await getSinglePage(config.settings.product_folder);
  const totalPages = Math.ceil(posts.length / config.settings.pagination);
  const paths = [];

  for (let i = 1; i < totalPages; i++) {
    paths.push({
      params: {
        slug: (i + 1).toString(),
      },
    });
  }
  return paths;
}
const blogIndex = await getEntryBySlug<any, string>(
  config.settings.product_folder,
  "-index"
);
const { slug } = Astro.params;

const { product_folder } = config.settings; // "blog"
//const posts = await getSinglePage(product_folder);

const posts = productsJson.map((product) => ({
  data: product,
  slug: `product-${product.id_product}`,
}));
const sortedProducts = posts;

const recentProduct = sortedProducts.filter((item) => !item.data.featured);
const totalPages = Math.ceil(recentProduct.length / config.settings.pagination);
const currentPage = slug && !isNaN(Number(slug)) ? Number(slug) : 1;
const indexOfLastProduct = currentPage * config.settings.pagination;
const indexOfFirstProduct = indexOfLastProduct - config.settings.pagination;
const currentProducts = recentProduct.slice(indexOfFirstProduct, indexOfLastProduct);

const page_data = {
  index_title: blogIndex.data.title,
  slug: `page / ${slug}`,
  index_path: `${config.settings.product_folder}`
};

---

<Base
  title={blogIndex.data.title}
  meta_title={blogIndex.data.meta_title}
  description={blogIndex.data.description}
  image={blogIndex.data.image}
>
  <Shape />
  <section class="page-hero pt-16">
    <div class="container">
      <PageHeader page_data={page_data} />
    </div>
  </section>
  <section class="border border-red-700 section mx-4 md:mx-10 lg:mx-20 mt-12">
      <ProductsList products={currentProducts} />
      <Pagination
        section={product_folder}
        totalPages={totalPages}
        currentPage={currentPage}
      />
    </div>
  </section>
</Base>
