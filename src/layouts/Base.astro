---
import TwSizeIndicator from "@components/TwSizeIndicator.astro";
import config from "@config/config.json";
import theme from "@config/theme.json";
import { plainify } from "@lib/utils/textConverter";
import Footer from "@partials/Footer.astro";
import Header from "@partials/Header/Header.astro";
import "@styles/main.scss";
import ContactButton from "./function-components/ContactButton";
import { ViewTransitions } from "astro:transitions";

// font families
const pf = theme.fonts.font_family.primary;
const sf = theme.fonts.font_family.secondary;

// types for frontmatters
export interface Props {
  title?: string;
  meta_title?: string;
  description?: string;
  image?: string;
  noindex?: boolean;
  canonical?: string;
  is404?: boolean;
}

// distructure frontmatters
const { title, meta_title, description, image, noindex, canonical, is404 = false } =
  Astro.props;

 
const { currentLocale } = Astro
import { getI18N } from '@i18n/index';
import { ContentSchemaContainsSlugError } from "node_modules/astro/dist/core/errors/errors-data";
const i18n = getI18N({ currentLocale })
// console.log("currentLocale")
// console.log(currentLocale)
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- favicon -->
    <link rel="shortcut icon" href={config.site.favicon} />

    <!-- theme meta -->
    <meta name="theme-name" content="pinwheel-astro" />
    <meta name="msapplication-TileColor" content="#000000" />
    <meta
      name="theme-color"
      media="(prefers-color-scheme: light)"
      content="#fff"
    />
    <meta
      name="theme-color"
      media="(prefers-color-scheme: dark)"
      content="#000"
    />
    <meta name="generator" content={Astro.generator} />
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

    <!-- Evita parpadeo al aplicar el tema correcto antes del render -->
    <script is:inline>
      (function() {
        const LS_KEY = "appTheme";
        const root = document.documentElement;

        /** Aplica el tema segun localStorage o preferencia del sistema */
        function applyTheme() {
          try {
            const storedTheme = localStorage.getItem(LS_KEY);
            const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
            const theme = storedTheme || (prefersDark ? "dark" : "light");

            root.classList.toggle("dark", theme === "dark");
            root.style.colorScheme = theme === "dark" ? "dark" : "light";
          } catch (e) {
            console.warn("Theme apply failed:", e);
          }
        }

        // Ejecutar antes del primer render
        applyTheme();

        // üîÅ Reaplicar despu√©s de cada transici√≥n de p√°gina
        document.addEventListener("astro:after-swap", applyTheme);
      })();
    </script>

    <!-- google font css -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href={`https://fonts.googleapis.com/css2?family=${pf}${
        sf ? "&family=" + sf : ""
      }&display=swap`}
      rel="stylesheet"
    />

    <!-- responsive meta -->
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, maximum-scale=5"
    />

    <!-- title -->
    <title>
      {plainify(meta_title ? meta_title : title ? title : config.site.title)}
    </title>
    
    <ViewTransitions/>
    
    <!-- canonical url -->
    {canonical && <link rel="canonical" href={canonical} item-prop="url" />}

    <!-- noindex robots -->
    {noindex && <meta name="robots" content="noindex,nofollow" />}

    <!-- meta-description -->
    <meta
      name="description"
      content={plainify(
        description ? description : config.metadata.meta_description
      )}
    />

    <!-- author from config.json -->
    <meta name="author" content={config.metadata.meta_author} />

    <!-- og-title -->
    <meta
      property="og:title"
      content={plainify(
        meta_title ? meta_title : title ? title : config.site.title
      )}
    />

    <!-- og-description -->
    <meta
      property="og:description"
      content={plainify(
        description ? description : config.metadata.meta_description
      )}
    />
    <meta property="og:type" content="website" />
    <meta
      property="og:url"
      content={`${config.site.base_url}/${Astro.url.pathname.replace("/", "")}`}
    />

    <!-- twitter-title -->
    <meta
      name="twitter:title"
      content={plainify(
        meta_title ? meta_title : title ? title : config.site.title
      )}
    />

    <!-- twitter-description -->
    <meta
      name="twitter:description"
      content={plainify(
        description ? description : config.metadata.meta_description
      )}
    />

    <!-- og-image -->
    <meta
      property="og:image"
      content={`${config.site.base_url}${
        image ? image : config.metadata.meta_image
      }`}
    />

    <!-- twitter-image -->
    <meta
      name="twitter:image"
      content={`${config.site.base_url}${
        image ? image : config.metadata.meta_image
      }`}
    />
    <meta name="twitter:card" content="summary_large_image" />
  </head>
  <body>
    <TwSizeIndicator />
    <Header is404={is404}/>
    <main id="main-content">
      <slot />
    </main>
    <Footer />
    <ContactButton 
      i18n={i18n}
      client:load/>
  </body>
</html>
