---
import { getRelativeLocaleUrl } from "astro:i18n";

const { section, currentPage, totalPages } = Astro.props;
const indexPageLink = currentPage === 2;
const hasPrevPage = currentPage > 1;
const hasNextPage = totalPages > currentPage;
let pageList = [];
for (let i = 1; i <= totalPages; i++) {
  pageList.push(i);
}
const { currentLocale } = Astro

// Determine the page numbers to display
let displayedPages = [];
if (totalPages <= 5) {
  displayedPages = pageList;
} else if (currentPage <= 3) {
  displayedPages = [1, 2, 3, "...", totalPages];
} else if (currentPage >= totalPages - 2) {
  displayedPages = [1, "...", totalPages - 2, totalPages - 1, totalPages];
} else {
  displayedPages = [1, "...", currentPage, "...", totalPages];
}
---

{
  totalPages > 1 && (
    <nav
      class="mb-4 mt-14 flex items-center justify-center"
      aria-label="Pagination"
    >
      {/* previous */}
      {hasPrevPage ? (
        <a
          href={getRelativeLocaleUrl(currentLocale ?? '',
            indexPageLink
              ? `${section ? "/" + section : "/"}`
              : `${section ? "/" + section : ""}/page/${currentPage - 1}`)}
          class="mx-1 flex h-8 w-8 items-center justify-center rounded-full border text-dark hover:shadow-lg"
        >
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="h-4 w-4">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
          </svg>
        </a>
      ) : (
        <span class="mx-1 flex h-8 w-8 items-center justify-center rounded-full border bg-white text-center text-dark">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="h-4 w-4">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
          </svg>
        </span>
      )}

      {/* page index */}
      {displayedPages.map((pagination, i) =>
        pagination === currentPage ? (
          <span
            aria-current="page"
            class="mx-1 flex h-8 w-8 items-center justify-center rounded-full bg-primary text-white"
          >
            {pagination}
          </span>
        ) : pagination === "..." ? (
          <span class="mx-1 flex h-8 w-8 items-center justify-center text-dark">
            ...
          </span>
        ) : (
          <a
            href={getRelativeLocaleUrl(currentLocale ?? '',
              i === 0
                ? `${section ? "/" + section : "/"}`
                : `${section ? "/" + section : ""}/page/${pagination}`)}
            aria-current="page"
            class="mx-1 flex h-8 w-8 items-center justify-center rounded-full border bg-white text-dark hover:bg-primary hover:text-white"
          >
            {pagination}
          </a>
        )
      )}

      {/* next page */}
      {hasNextPage ? (
        <a
          href={getRelativeLocaleUrl(currentLocale ?? '',
          `${section ? "/" + section : ""}/page/${currentPage + 1}`)}
          class="mx-1 flex h-8 w-8 items-center justify-center rounded-full border text-dark hover:shadow-lg"
        >
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="h-4 w-4">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        </a>
      ) : (
        <span class="mx-1 flex h-8 w-8 items-center justify-center rounded-full border bg-white text-center text-dark">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="h-4 w-4">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        </span>
      )}
    </nav>
  )
}
