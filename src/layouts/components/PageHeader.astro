---
import { humanize, markdownify, slugify } from "@lib/utils/textConverter";
import { getRelativeLocaleUrl } from "astro:i18n";

const { currentLocale } = Astro
const { page_data } = Astro.props || {};
const { title, index_title, page_title, slug, content, index_path } = page_data || {};
// //console.log(title)
// //console.log(index_title)
// //console.log(page_title)
// //console.log(slug)
// //console.log(content)
// //console.log(index_path)
---

<div class="text-center">
  <ul
    class="border-2 border-primary breadcrumb inline-flex h-8 items-center justify-center space-x-2 rounded-3xl bg-theme-light px-4 py-2"
  >
    <li class="leading-none text-dark">
      <a 
        href={getRelativeLocaleUrl(currentLocale ?? '',`/`)}
        class="inline-flex items-end text-primary"
      >
        <svg
          class="mr-1.5 leading-none"
          width="18"
          height="18"
          viewBox="0 0 16 16"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M13.1769 15.0588H10.3533V9.41178H5.64744V15.0588H2.82391V6.58825H1.88274V16H14.118V6.58825H13.1769V15.0588ZM6.58862 15.0588V10.353H9.41215V15.0588H6.58862ZM15.8084 6.09225L15.2512 6.85178L8.00038 1.52472L0.749559 6.8499L0.192383 6.09131L8.00038 0.357666L15.8084 6.09225Z"
            fill="currentColor"></path>
        </svg>
        <span class="leading-none">Home</span>
      </a>
    </li>
    <li class="leading-none text-dark ">
      {
        index_title ? (
          <span class="leading-none">
            /{" "}
            <a 
              href={getRelativeLocaleUrl(currentLocale ?? '',`/${index_path}`)}
              class="text-primary"
            >
              {index_title}
            </a>{" "}
            / {page_title ? page_title : humanize(slug.replace("page /", ""))}
          </span>
        ) : (
          <span class="leading-none">/ {title}</span>
        )
      }
    </li>
  </ul>
  <div class="p-0 lg:p-20">
    <h1
      class="mb-5 mt-8 text-default"
      set:html={markdownify(
        page_data?.page_title ? page_data?.page_title : page_data?.title
      )}
    />
    <p class='text-default' set:html={markdownify(content)} />

    {
      page_data.buttons && (
        <div class="mt-11 justify-center sm:flex">
          {page_data.buttons.map(
            (button: any) =>
              button?.enable && (
                <a
                  class={`btn m-3 block sm:inline-block ${
                    button?.outline ? "btn-outline-primary" : "btn-primary"
                  } `}
                  href={getRelativeLocaleUrl(currentLocale ?? '',`${button?.link}`)}
                >
                  {button?.label}
                </a>
              )
          )}
        </div>
      )
    }
  </div>
</div>
